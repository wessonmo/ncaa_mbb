select
	g.season,
	g.game_date,
	coalesce(trn.tourn,0) as tourn,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then g.school_id
		else g.opp_id
	end as home_id,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then coalesce(s_div.division,4)
		else coalesce(o_div.division,4)
	end as home_div,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then g.opp_id
		else g.school_id
	end as away_id,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then coalesce(o_div.division,4)
		else coalesce(s_div.division,4)
	end as away_div,
	--
	case
		when g.location in ('Home','Away') or dist.opp_dist = 0 or dist.school_dist = 0 then 'Home'
		else 'Neutral'
	end as location,
	--
	case
		when g.location = 'Home' and dist.opp_dist is not null and round((dist.opp_dist/500)::numeric,0)*500 < 2500 then (round((dist.opp_dist/500)::numeric,0)*500)::varchar
		when g.location = 'Home' and dist.opp_dist is not null and round((dist.opp_dist/500)::numeric,0)*500 >= 2500 then '>=2500'
		when g.location = 'Home' and dist.opp_dist is null then 'none'
		when g.location = 'Away' and dist.school_dist is not null and round((dist.school_dist/500)::numeric,0)*500 < 2500 then (round((dist.school_dist/500)::numeric,0)*500)::varchar
		when g.location = 'Away' and dist.school_dist is not null and round((dist.school_dist/500)::numeric,0)*500 >= 2500 then '>=2500'
		when g.location = 'Away' and dist.school_dist is null then 'none'
		when g.location = 'Neutral' and dist.school_dist is not null and dist.opp_dist is not null and round((abs(dist.school_dist - dist.opp_dist)/500)::numeric,0)*500 < 2500 then (round((abs(dist.school_dist - dist.opp_dist)/500)::numeric,0)*500)::varchar
		when g.location = 'Neutral' and dist.school_dist is not null and dist.opp_dist is not null and round((abs(dist.school_dist - dist.opp_dist)/500)::numeric,0)*500 >= 2500 then '>=2500'
		when g.location = 'Neutral' and dist.school_dist is null and dist.opp_dist is not null and round((dist.opp_dist/500)::numeric,0)*500 < 2500 then (round((dist.opp_dist/500)::numeric,0)*500)::varchar
		when g.location = 'Neutral' and dist.school_dist is null and dist.opp_dist is not null and round((dist.opp_dist/500)::numeric,0)*500 >= 2500 then 'none>=2500'
		when g.location = 'Neutral' and dist.school_dist is not null and dist.opp_dist is null and round((dist.school_dist/500)::numeric,0)*500 < 2500 then (round((dist.school_dist/500)::numeric,0)*500)::varchar
		when g.location = 'Neutral' and dist.school_dist is not null and dist.opp_dist is null and round((dist.school_dist/500)::numeric,0)*500 >= 2500 then 'none>=2500'
		else 'none'
	end as dist_diff,
	--
	case
		when g.ot is not null then 0
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then g.school_score - g.opp_score
		else g.opp_score - g.school_score
	 end as pt_diff,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then s_stats.teff
		else o_stats.teff
	end as home_teff,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then s_stats.efg
		else o_stats.efg
	end as home_efg,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then s_stats.pta_min
		else o_stats.pta_min
	end as home_pta_min,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then s_stats.astp
		else o_stats.astp
	end as home_astp,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then s_stats.blkp
		else o_stats.blkp
	end as home_blkp,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then s_stats.orbp
		else o_stats.orbp
	end as home_orbp,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then s_stats.drbp
		else o_stats.drbp
	end as home_drbp,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then o_stats.teff
		else s_stats.teff
	end as away_teff,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then o_stats.efg
		else s_stats.efg
	end as away_efg,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then o_stats.pta_min
		else s_stats.pta_min
	end as away_pta_min,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then o_stats.astp
		else s_stats.astp
	end as away_astp,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then o_stats.blkp
		else s_stats.blkp
	end as away_blkp,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then o_stats.orbp
		else s_stats.orbp
	end as away_orbp,
	--
	case
		when
			(g.location = 'Home')
			or (
				(g.location = 'Neutral')
				and (
					((dist.school_dist,dist.opp_dist) = (null,null))
					or ((dist.opp_dist is null) and (dist.school_dist is not null))
					or (dist.school_dist - dist.opp_dist < 0)
					)
				)
			then o_stats.drbp
		else s_stats.drbp
	end as away_drbp
from
	mbb.games as g
	left join mbb.school_divs as s_div
		on
			g.season = s_div.season
			and g.school_id = s_div.school_id
	left join mbb.school_divs as o_div
		on
			g.season = o_div.season
			and g.opp_id = o_div.school_id
	left join mbb.school_dist as dist
		on
			g.game_date = dist.game_date
			and g.school_id = dist.school_id
			and g.opp_id = dist.opp_id
	left join mbb.games_stats as s_stats
		on
			g.game_date = s_stats.game_date
			and g.school_id = s_stats.school_id
			and g.opp_id = s_stats.opp_id
	left join mbb.games_stats as o_stats
		on
			g.game_date = o_stats.game_date
			and g.opp_id = o_stats.school_id
			and g.school_id = o_stats.opp_id
	left join mbb.tourn_games as trn
		on
			g.game_date = trn.game_date
			and g.school_id = trn.school_id
			and g.opp_id = trn.opp_id					
where g.school_id < g.opp_id
--limit 100